<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="app.mapper.UserInfoMapper">
  <resultMap id="BaseResultMap" type="app.model.UserInfo">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Dec 03 21:22:56 JST 2015.
    -->
    <id column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="organization_name" jdbcType="VARCHAR" property="organizationName" />
    <result column="enabled" jdbcType="BIT" property="enabled" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="activate_token" jdbcType="VARCHAR" property="activateToken" />
    <result column="activate_limit" jdbcType="TIMESTAMP" property="activateLimit" />
    <result column="activate_flag" jdbcType="BIT" property="activateFlag" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Dec 03 21:22:56 JST 2015.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Dec 03 21:22:56 JST 2015.
    -->
    user_id, password, organization_name, enabled, email, activate_token, activate_limit, 
    activate_flag
  </sql>
  <select id="selectByExample" parameterType="app.model.UserInfoExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Dec 03 21:22:56 JST 2015.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from public.user_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="app.model.UserInfoKey" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Dec 03 21:22:56 JST 2015.
    -->
    select 
    <include refid="Base_Column_List" />
    from public.user_info
    where user_id = #{userId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="app.model.UserInfoKey">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Dec 03 21:22:56 JST 2015.
    -->
    delete from public.user_info
    where user_id = #{userId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="app.model.UserInfo">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Dec 03 21:22:56 JST 2015.
    -->
    insert into public.user_info (user_id, password, organization_name, 
      enabled, email, activate_token, 
      activate_limit, activate_flag)
    values (#{userId,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{organizationName,jdbcType=VARCHAR}, 
      #{enabled,jdbcType=BIT}, #{email,jdbcType=VARCHAR}, #{activateToken,jdbcType=VARCHAR}, 
      #{activateLimit,jdbcType=TIMESTAMP}, #{activateFlag,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="app.model.UserInfo">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Dec 03 21:22:56 JST 2015.
    -->
    insert into public.user_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="organizationName != null">
        organization_name,
      </if>
      <if test="enabled != null">
        enabled,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="activateToken != null">
        activate_token,
      </if>
      <if test="activateLimit != null">
        activate_limit,
      </if>
      <if test="activateFlag != null">
        activate_flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="organizationName != null">
        #{organizationName,jdbcType=VARCHAR},
      </if>
      <if test="enabled != null">
        #{enabled,jdbcType=BIT},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="activateToken != null">
        #{activateToken,jdbcType=VARCHAR},
      </if>
      <if test="activateLimit != null">
        #{activateLimit,jdbcType=TIMESTAMP},
      </if>
      <if test="activateFlag != null">
        #{activateFlag,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="app.model.UserInfo">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Dec 03 21:22:56 JST 2015.
    -->
    update public.user_info
    <set>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="organizationName != null">
        organization_name = #{organizationName,jdbcType=VARCHAR},
      </if>
      <if test="enabled != null">
        enabled = #{enabled,jdbcType=BIT},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="activateToken != null">
        activate_token = #{activateToken,jdbcType=VARCHAR},
      </if>
      <if test="activateLimit != null">
        activate_limit = #{activateLimit,jdbcType=TIMESTAMP},
      </if>
      <if test="activateFlag != null">
        activate_flag = #{activateFlag,jdbcType=BIT},
      </if>
    </set>
    where user_id = #{userId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="app.model.UserInfo">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Dec 03 21:22:56 JST 2015.
    -->
    update public.user_info
    set password = #{password,jdbcType=VARCHAR},
      organization_name = #{organizationName,jdbcType=VARCHAR},
      enabled = #{enabled,jdbcType=BIT},
      email = #{email,jdbcType=VARCHAR},
      activate_token = #{activateToken,jdbcType=VARCHAR},
      activate_limit = #{activateLimit,jdbcType=TIMESTAMP},
      activate_flag = #{activateFlag,jdbcType=BIT}
    where user_id = #{userId,jdbcType=VARCHAR}
  </update>
</mapper>